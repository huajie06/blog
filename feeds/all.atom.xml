<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Huajie's Notes</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2019-12-26T00:00:00-05:00</updated><subtitle>A place where I keep some notes</subtitle><entry><title>Python News Scraping Notes</title><link href="/posts/2019/12/26/python-news-scraping/" rel="alternate"></link><published>2019-12-26T00:00:00-05:00</published><updated>2019-12-26T00:00:00-05:00</updated><author><name>huajie</name></author><id>tag:None,2019-12-26:/posts/2019/12/26/python-news-scraping/</id><summary type="html">&lt;p&gt;The intention of this site was really for myself to have a place to scan a collection of news quickly. &lt;/p&gt;
&lt;p&gt;The goal was to use Python to &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request a news website xml/html feed &lt;/li&gt;
&lt;li&gt;Parse it using some library, keep the wanted info&lt;/li&gt;
&lt;li&gt;Store it to database&lt;/li&gt;
&lt;li&gt;Dashboarding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Collection of â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;The intention of this site was really for myself to have a place to scan a collection of news quickly. &lt;/p&gt;
&lt;p&gt;The goal was to use Python to &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Request a news website xml/html feed &lt;/li&gt;
&lt;li&gt;Parse it using some library, keep the wanted info&lt;/li&gt;
&lt;li&gt;Store it to database&lt;/li&gt;
&lt;li&gt;Dashboarding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Collection of news source&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CNBC&lt;/li&gt;
&lt;li&gt;Bloomberge, &lt;strong&gt;subscription needed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Yahoo&lt;/li&gt;
&lt;li&gt;WSJ, &lt;strong&gt;subscription needed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;~~Reuters~~&lt;/li&gt;
&lt;li&gt;MarketWatch&lt;/li&gt;
&lt;li&gt;Google Search with &lt;strong&gt;China&lt;/strong&gt; as a key words&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The script will runs every 10 min and there's a random number generator to determine if the code gets executed within each source block.&lt;/p&gt;
&lt;p&gt;The notes area use Javascript &lt;a href="https://github.com/showdownjs/showdown"&gt;Showdown&lt;/a&gt; to convert markdown into HTML rendering. &lt;/p&gt;
&lt;h3&gt;TODO&lt;/h3&gt;
&lt;p&gt;Replace Python with Javascript to scrape the website&lt;/p&gt;
&lt;p&gt;Parse the title and the content to 
    - get the topic
    - some kind of sentiment&lt;/p&gt;</content><category term="Web"></category><category term="python"></category><category term="flask"></category></entry><entry><title>Deploy flask app on Raspberry pi</title><link href="/posts/2019/12/25/flask-deployment/" rel="alternate"></link><published>2019-12-25T00:00:00-05:00</published><updated>2019-12-25T00:00:00-05:00</updated><author><name>huajie</name></author><id>tag:None,2019-12-25:/posts/2019/12/25/flask-deployment/</id><summary type="html">&lt;p&gt;Flask deployment&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some options didn't try to remember&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# listen to all port&lt;/span&gt;
flask run --host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.0.0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Same as above&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;SSH setup&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vim /etc/ssh/sshd_config
&lt;span class="c1"&gt;# 1. Disable root login by &lt;/span&gt;
&lt;span class="c1"&gt;#     - PermitRootLogin no&lt;/span&gt;
&lt;span class="c1"&gt;# 2. Disable password logins&lt;/span&gt;
&lt;span class="c1"&gt;#     - PasswordAuthentication no&lt;/span&gt;
sudo service ssh restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install ufw - uncomplicated fire wall&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install ufw
sudo ufw allow ssh
sudo ufw allow http
sudo ufw allow &lt;span class="m"&gt;443&lt;/span&gt;/tcp
sudo ufw --force &lt;span class="nb"&gt;enable&lt;/span&gt;
sudo ufw status
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install nginx and supervisor&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also gunicorn using pip under virtual env&lt;/p&gt;
&lt;p&gt;Get a secret key by &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python3 -c &lt;span class="s2"&gt;&amp;quot;import uuid; print(uuid.uuid4().hex)&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Setting up gunicorn and supervisor. This command needs to be inside of &lt;strong&gt;your app&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# number of workers = core/2 + 1&lt;/span&gt;
gunicorn -b localhost:8000 -w &lt;span class="m"&gt;4&lt;/span&gt; blog:app
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Set up nginx
1. Delete the file sudo rm /etc/nginx/sites-enabled/default
2. Create a new one, &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;server_name&lt;/strong&gt; can be your domain name&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
        listen &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        server_name &lt;span class="m"&gt;192&lt;/span&gt;.168.1.117&lt;span class="p"&gt;;&lt;/span&gt;

        location /static &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;alias&lt;/span&gt; /home/pi/py/fin_news/static&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;

        location / &lt;span class="o"&gt;{&lt;/span&gt;
                proxy_pass http://localhost:8000&lt;span class="p"&gt;;&lt;/span&gt;
                include /etc/nginx/proxy_params&lt;span class="p"&gt;;&lt;/span&gt;
                proxy_redirect off&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install supervisor and setup.
Add this to &lt;strong&gt;/etc/supervisor/conf.d/flask-blog.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;program:flaskblog&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/py/fin_news
&lt;span class="nv"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/py/fin_news/venv/bin/gunicorn -b localhost:8000 -w &lt;span class="m"&gt;4&lt;/span&gt; blog:app
&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;pi
&lt;span class="nv"&gt;autostart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;autorestart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;stopasgroup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;killasgroup&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;stderr_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/py/fin_news/log/flaskblog.err.log
&lt;span class="nv"&gt;stdout_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/pi/py/fin_news/log/flaskblog.out.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You have to start supervisord before you can use supervisorctl, which is to run the following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo supervisord -c /etc/supervisor/supervisord.conf
sudo supervisorctl -c /etc/supervisor/supervisord.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then finally run &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# supervisord start flaskblog&lt;/span&gt;
sudo supervisorctl restart flaskblog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add SSL&lt;/p&gt;
&lt;p&gt;First need to open the firewall on linux server as well as router if home hosting&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ufw allow https
sudo ufw status
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run the cmd from letsencrypt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://dl.eff.org/certbot-auto
sudo mv certbot-auto /usr/local/bin/certbot-auto
sudo chown root /usr/local/bin/certbot-auto
sudo chmod &lt;span class="m"&gt;0755&lt;/span&gt; /usr/local/bin/certbot-auto
&lt;span class="c1"&gt;#then do this &lt;/span&gt;
sudo /usr/local/bin/certbot-auto --nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Each time once the setup file change, refresh with the following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl restart nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Renew &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/usr/local/bin/certbot-auto renew
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Some cmd used&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l --block-size&lt;span class="o"&gt;=&lt;/span&gt;MB
ls -l --block-size&lt;span class="o"&gt;=&lt;/span&gt;M
ls -lh
sudo vim /etc/nginx/sites-enabled/flask-blog
tail -n &lt;span class="m"&gt;20&lt;/span&gt; /var/log/nginx/error.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now the nginx file becomes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
        server_name www.huajiezhang.com&lt;span class="p"&gt;;&lt;/span&gt;

        location /static &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;alias&lt;/span&gt; /home/pi/py/fin_news/static&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        location / &lt;span class="o"&gt;{&lt;/span&gt;
                proxy_pass http://localhost:8000&lt;span class="p"&gt;;&lt;/span&gt;
                include /etc/nginx/proxy_params&lt;span class="p"&gt;;&lt;/span&gt;
                proxy_redirect off&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    listen &lt;span class="m"&gt;443&lt;/span&gt; ssl&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
    ssl_certificate /etc/letsencrypt/live/www.huajiezhang.com/fullchain.pem&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
    ssl_certificate_key /etc/letsencrypt/live/www.huajiezhang.com/privkey.pem&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
    include /etc/letsencrypt/options-ssl-nginx.conf&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

server &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; www.huajiezhang.com&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;301&lt;/span&gt; https://&lt;span class="nv"&gt;$host$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
        listen &lt;span class="m"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        server_name www.huajiezhang.com&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# managed by Certbot&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;TODO&lt;/h3&gt;
&lt;p&gt;redirect to non www site - huajiezhang.com&lt;/p&gt;</content><category term="Web"></category><category term="flask"></category><category term="python"></category></entry></feed>